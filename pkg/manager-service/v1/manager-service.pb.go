// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.12.4
// source: manager-service/v1/manager-service.proto

package manager_service

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpirationDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	PackageType    string                 `protobuf:"bytes,2,opt,name=package_type,json=packageType,proto3" json:"package_type,omitempty"`
	Cost           uint64                 `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
	Weight         uint64                 `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	UseTape        bool                   `protobuf:"varint,5,opt,name=use_tape,json=useTape,proto3" json:"use_tape,omitempty"`
}

func (x *OrderV1) Reset() {
	*x = OrderV1{}
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderV1) ProtoMessage() {}

func (x *OrderV1) ProtoReflect() protoreflect.Message {
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderV1.ProtoReflect.Descriptor instead.
func (*OrderV1) Descriptor() ([]byte, []int) {
	return file_manager_service_v1_manager_service_proto_rawDescGZIP(), []int{0}
}

func (x *OrderV1) GetExpirationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

func (x *OrderV1) GetPackageType() string {
	if x != nil {
		return x.PackageType
	}
	return ""
}

func (x *OrderV1) GetCost() uint64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *OrderV1) GetWeight() uint64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *OrderV1) GetUseTape() bool {
	if x != nil {
		return x.UseTape
	}
	return false
}

type OrderViewV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order   *OrderV1 `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	UserId  uint64   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrderId uint64   `protobuf:"varint,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *OrderViewV1) Reset() {
	*x = OrderViewV1{}
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderViewV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderViewV1) ProtoMessage() {}

func (x *OrderViewV1) ProtoReflect() protoreflect.Message {
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderViewV1.ProtoReflect.Descriptor instead.
func (*OrderViewV1) Descriptor() ([]byte, []int) {
	return file_manager_service_v1_manager_service_proto_rawDescGZIP(), []int{1}
}

func (x *OrderViewV1) GetOrder() *OrderV1 {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *OrderViewV1) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OrderViewV1) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type AddOrderRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  uint64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrderId uint64   `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Order   *OrderV1 `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *AddOrderRequestV1) Reset() {
	*x = AddOrderRequestV1{}
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOrderRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderRequestV1) ProtoMessage() {}

func (x *AddOrderRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderRequestV1.ProtoReflect.Descriptor instead.
func (*AddOrderRequestV1) Descriptor() ([]byte, []int) {
	return file_manager_service_v1_manager_service_proto_rawDescGZIP(), []int{2}
}

func (x *AddOrderRequestV1) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddOrderRequestV1) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *AddOrderRequestV1) GetOrder() *OrderV1 {
	if x != nil {
		return x.Order
	}
	return nil
}

type AddOrderResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddOrderResponseV1) Reset() {
	*x = AddOrderResponseV1{}
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOrderResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderResponseV1) ProtoMessage() {}

func (x *AddOrderResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderResponseV1.ProtoReflect.Descriptor instead.
func (*AddOrderResponseV1) Descriptor() ([]byte, []int) {
	return file_manager_service_v1_manager_service_proto_rawDescGZIP(), []int{3}
}

type RefundRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrderId uint64 `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *RefundRequestV1) Reset() {
	*x = RefundRequestV1{}
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundRequestV1) ProtoMessage() {}

func (x *RefundRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundRequestV1.ProtoReflect.Descriptor instead.
func (*RefundRequestV1) Descriptor() ([]byte, []int) {
	return file_manager_service_v1_manager_service_proto_rawDescGZIP(), []int{4}
}

func (x *RefundRequestV1) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RefundRequestV1) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type RefundResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefundResponseV1) Reset() {
	*x = RefundResponseV1{}
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundResponseV1) ProtoMessage() {}

func (x *RefundResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundResponseV1.ProtoReflect.Descriptor instead.
func (*RefundResponseV1) Descriptor() ([]byte, []int) {
	return file_manager_service_v1_manager_service_proto_rawDescGZIP(), []int{5}
}

type GiveOrdersRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []uint64 `protobuf:"varint,1,rep,packed,name=orders,proto3" json:"orders,omitempty"`
}

func (x *GiveOrdersRequestV1) Reset() {
	*x = GiveOrdersRequestV1{}
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GiveOrdersRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiveOrdersRequestV1) ProtoMessage() {}

func (x *GiveOrdersRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiveOrdersRequestV1.ProtoReflect.Descriptor instead.
func (*GiveOrdersRequestV1) Descriptor() ([]byte, []int) {
	return file_manager_service_v1_manager_service_proto_rawDescGZIP(), []int{6}
}

func (x *GiveOrdersRequestV1) GetOrders() []uint64 {
	if x != nil {
		return x.Orders
	}
	return nil
}

type GiveOrdersResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GiveOrdersResponseV1) Reset() {
	*x = GiveOrdersResponseV1{}
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GiveOrdersResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiveOrdersResponseV1) ProtoMessage() {}

func (x *GiveOrdersResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiveOrdersResponseV1.ProtoReflect.Descriptor instead.
func (*GiveOrdersResponseV1) Descriptor() ([]byte, []int) {
	return file_manager_service_v1_manager_service_proto_rawDescGZIP(), []int{7}
}

type ReturnRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId uint64 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *ReturnRequestV1) Reset() {
	*x = ReturnRequestV1{}
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReturnRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnRequestV1) ProtoMessage() {}

func (x *ReturnRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnRequestV1.ProtoReflect.Descriptor instead.
func (*ReturnRequestV1) Descriptor() ([]byte, []int) {
	return file_manager_service_v1_manager_service_proto_rawDescGZIP(), []int{8}
}

func (x *ReturnRequestV1) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type ReturnResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReturnResponseV1) Reset() {
	*x = ReturnResponseV1{}
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReturnResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnResponseV1) ProtoMessage() {}

func (x *ReturnResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnResponseV1.ProtoReflect.Descriptor instead.
func (*ReturnResponseV1) Descriptor() ([]byte, []int) {
	return file_manager_service_v1_manager_service_proto_rawDescGZIP(), []int{9}
}

type ViewRefundsRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId        uint64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	OrdersPerPage uint64 `protobuf:"varint,2,opt,name=orders_per_page,json=ordersPerPage,proto3" json:"orders_per_page,omitempty"`
}

func (x *ViewRefundsRequestV1) Reset() {
	*x = ViewRefundsRequestV1{}
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewRefundsRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewRefundsRequestV1) ProtoMessage() {}

func (x *ViewRefundsRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewRefundsRequestV1.ProtoReflect.Descriptor instead.
func (*ViewRefundsRequestV1) Descriptor() ([]byte, []int) {
	return file_manager_service_v1_manager_service_proto_rawDescGZIP(), []int{10}
}

func (x *ViewRefundsRequestV1) GetPageId() uint64 {
	if x != nil {
		return x.PageId
	}
	return 0
}

func (x *ViewRefundsRequestV1) GetOrdersPerPage() uint64 {
	if x != nil {
		return x.OrdersPerPage
	}
	return 0
}

type ViewRefundsResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*OrderViewV1 `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *ViewRefundsResponseV1) Reset() {
	*x = ViewRefundsResponseV1{}
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewRefundsResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewRefundsResponseV1) ProtoMessage() {}

func (x *ViewRefundsResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewRefundsResponseV1.ProtoReflect.Descriptor instead.
func (*ViewRefundsResponseV1) Descriptor() ([]byte, []int) {
	return file_manager_service_v1_manager_service_proto_rawDescGZIP(), []int{11}
}

func (x *ViewRefundsResponseV1) GetOrders() []*OrderViewV1 {
	if x != nil {
		return x.Orders
	}
	return nil
}

type ViewOrdersRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FirstOrderId uint64 `protobuf:"varint,2,opt,name=first_order_id,json=firstOrderId,proto3" json:"first_order_id,omitempty"`
	Limit        uint64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ViewOrdersRequestV1) Reset() {
	*x = ViewOrdersRequestV1{}
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewOrdersRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewOrdersRequestV1) ProtoMessage() {}

func (x *ViewOrdersRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewOrdersRequestV1.ProtoReflect.Descriptor instead.
func (*ViewOrdersRequestV1) Descriptor() ([]byte, []int) {
	return file_manager_service_v1_manager_service_proto_rawDescGZIP(), []int{12}
}

func (x *ViewOrdersRequestV1) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ViewOrdersRequestV1) GetFirstOrderId() uint64 {
	if x != nil {
		return x.FirstOrderId
	}
	return 0
}

func (x *ViewOrdersRequestV1) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ViewOrdersResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*OrderViewV1 `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *ViewOrdersResponseV1) Reset() {
	*x = ViewOrdersResponseV1{}
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewOrdersResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewOrdersResponseV1) ProtoMessage() {}

func (x *ViewOrdersResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_manager_service_v1_manager_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewOrdersResponseV1.ProtoReflect.Descriptor instead.
func (*ViewOrdersResponseV1) Descriptor() ([]byte, []int) {
	return file_manager_service_v1_manager_service_proto_rawDescGZIP(), []int{13}
}

func (x *ViewOrdersResponseV1) GetOrders() []*OrderViewV1 {
	if x != nil {
		return x.Orders
	}
	return nil
}

var File_manager_service_v1_manager_service_proto protoreflect.FileDescriptor

var file_manager_service_v1_manager_service_proto_rawDesc = []byte{
	0x0a, 0x28, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x01, 0x0a,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x63, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x75, 0x73, 0x65, 0x54, 0x61, 0x70, 0x65, 0x22, 0x69, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x56, 0x69, 0x65, 0x77, 0x56, 0x31, 0x12, 0x26, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42,
	0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x56, 0x31, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x22, 0x5d, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe0, 0x41, 0x02,
	0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x22, 0x32, 0x0a, 0x13, 0x47, 0x69,
	0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x31, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x04, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x16,
	0x0a, 0x14, 0x47, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x22, 0x38, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x25, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe0, 0x41, 0x02,
	0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x56, 0x31, 0x22, 0x6f, 0x0a, 0x14, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x23, 0x0a, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe0,
	0x41, 0x02, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x32, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa,
	0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x50, 0x65,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x22, 0x45, 0x0a, 0x15, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x12, 0x2c,
	0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x69,
	0x65, 0x77, 0x56, 0x31, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x8e, 0x01, 0x0a,
	0x13, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x56, 0x31, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20,
	0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0e, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x0c, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa,
	0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x44, 0x0a,
	0x14, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x56, 0x31, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x56, 0x31, 0x52, 0x06, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x32, 0xe9, 0x0d, 0x0a, 0x0e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x88, 0x02, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x56, 0x31, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x31, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x22, 0xc0,
	0x01, 0x92, 0x41, 0x9f, 0x01, 0x12, 0x21, 0xd0, 0x94, 0xd0, 0xbe, 0xd0, 0xb1, 0xd0, 0xb0, 0xd0,
	0xb2, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd0, 0xb7, 0xd0, 0xb0,
	0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xb0, 0x1a, 0x7a, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8,
	0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb8, 0xd0,
	0xb4, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba, 0xd0,
	0xb0, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0x20, 0xd0, 0xba, 0xd0, 0xbb, 0xd0, 0xb8, 0xd0, 0xb5,
	0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb0, 0x2c, 0x20, 0xd0, 0xb8, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xbd,
	0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbe,
	0xd1, 0x80, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xb0, 0x20,
	0xd0, 0xb8, 0x20, 0xd1, 0x81, 0xd0, 0xb0, 0xd0, 0xbc, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba,
	0xd0, 0xb0, 0xd0, 0xb7, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56,
	0x31, 0x12, 0x9e, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x56, 0x31, 0x12, 0x18,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x56, 0x31, 0x22, 0xdc, 0x01, 0x92, 0x41, 0xbd, 0x01, 0x12, 0x52, 0xd0, 0x92, 0xd0, 0xbe,
	0xd0, 0xb7, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x89, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8,
	0xd0, 0xb5, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xb0, 0x20,
	0xd0, 0xbe, 0xd1, 0x82, 0x20, 0xd0, 0xba, 0xd0, 0xbb, 0xd0, 0xb8, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1,
	0x82, 0xd0, 0xb0, 0x20, 0xd0, 0xbe, 0xd0, 0xb1, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbd,
	0xd0, 0xbe, 0x20, 0xd0, 0xbd, 0xd0, 0xb0, 0x20, 0xd0, 0x9f, 0xd0, 0x92, 0xd0, 0x97, 0x1a, 0x67,
	0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5,
	0xd1, 0x82, 0x20, 0xd0, 0xb8, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb8, 0xd1,
	0x84, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0x20, 0xd0, 0xba,
	0xd0, 0xbb, 0xd0, 0xb8, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb0, 0x20, 0xd0, 0xb8, 0x20,
	0xd0, 0xb8, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x84, 0xd0, 0xb8,
	0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0,
	0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xb0, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a,
	0x22, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x56, 0x31, 0x12, 0xec, 0x01, 0x0a, 0x0c, 0x47, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x56, 0x31, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x69,
	0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x31, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x69, 0x76, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31,
	0x22, 0x9e, 0x01, 0x92, 0x41, 0x7f, 0x12, 0x2a, 0xd0, 0x92, 0xd1, 0x8b, 0xd0, 0xb4, 0xd0, 0xb0,
	0xd1, 0x87, 0xd0, 0xb0, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0,
	0xbe, 0xd0, 0xb2, 0x20, 0xd0, 0xba, 0xd0, 0xbb, 0xd0, 0xb8, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82,
	0xd1, 0x83, 0x1a, 0x51, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc,
	0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xbc, 0xd0, 0xb0, 0xd1, 0x81, 0xd1, 0x81, 0xd0,
	0xb8, 0xd0, 0xb2, 0x20, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0, 0xbc, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xbe,
	0xd0, 0xb2, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0,
	0xb2, 0x20, 0xd0, 0xb4, 0xd0, 0xbb, 0xd1, 0x8f, 0x20, 0xd0, 0xb2, 0xd1, 0x8b, 0xd0, 0xb4, 0xd0,
	0xb0, 0xd1, 0x87, 0xd0, 0xb8, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x47, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x56,
	0x31, 0x12, 0xdc, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x31, 0x12, 0x18,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x56, 0x31, 0x22, 0x9a, 0x01, 0x92, 0x41, 0x7c, 0x12, 0x3e, 0xd0, 0x92, 0xd0, 0xbe, 0xd0,
	0xb7, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x89, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0,
	0xb5, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xb0, 0x20, 0xd0,
	0xbe, 0xd1, 0x82, 0x20, 0xd0, 0x9f, 0xd0, 0x92, 0xd0, 0x97, 0x20, 0xd0, 0xba, 0xd1, 0x83, 0xd1,
	0x80, 0xd1, 0x8c, 0xd0, 0xb5, 0xd1, 0x80, 0xd1, 0x83, 0x1a, 0x3a, 0xd0, 0x9f, 0xd1, 0x80, 0xd0,
	0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb8,
	0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba,
	0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0,
	0xb0, 0xd0, 0xb7, 0xd0, 0xb0, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x31,
	0x12, 0x99, 0x03, 0x0a, 0x0c, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x56,
	0x31, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a,
	0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x22, 0xcb,
	0x02, 0x92, 0x41, 0xab, 0x02, 0x12, 0x55, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x83, 0xd1,
	0x87, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba,
	0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0x20, 0xd0, 0xbe, 0xd0, 0xbf, 0xd1, 0x80, 0xd0,
	0xb5, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0,
	0xb3, 0xd0, 0xbe, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe,
	0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x1a, 0xd1, 0x01, 0xd0,
	0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1,
	0x82, 0x20, 0xd0, 0xb8, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x84,
	0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0x20, 0xd0, 0xba, 0xd0,
	0xbb, 0xd0, 0xb8, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb0, 0x2c, 0x20, 0xd0, 0xbc, 0xd0,
	0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbd, 0xd1,
	0x8b, 0xd0, 0xb9, 0x20, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0, 0xbc, 0xd0, 0xb5, 0xd1, 0x80, 0x20, 0xd0,
	0xbf, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xb2, 0xd0, 0xbe, 0xd0, 0xb3, 0xd0, 0xbe, 0x20, 0xd0, 0xb7,
	0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xb0, 0x2c, 0x20, 0xd0, 0xba, 0xd0, 0xbe,
	0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd1, 0x8b, 0xd0, 0xb9, 0x20, 0xd0, 0xb4, 0xd0, 0xbe, 0xd0,
	0xbb, 0xd0, 0xb6, 0xd0, 0xb5, 0xd0, 0xbd, 0x20, 0xd0, 0xb1, 0xd1, 0x8b, 0xd1, 0x82, 0xd1, 0x8c,
	0x20, 0xd0, 0xb2, 0xd0, 0xbe, 0xd0, 0xb7, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x89, 0xd1,
	0x91, 0xd0, 0xbd, 0x20, 0xd0, 0xb8, 0x20, 0xd0, 0xbb, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb8, 0xd1,
	0x82, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x56, 0x69, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x56, 0x31, 0x12, 0xc0, 0x02, 0x0a,
	0x0d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x56, 0x31, 0x12, 0x1d,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x1e, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x22, 0xef, 0x01,
	0x92, 0x41, 0xce, 0x01, 0x12, 0x54, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x83, 0xd1, 0x87,
	0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0,
	0xb0, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0x2c, 0x20, 0xd0, 0xbd, 0xd0, 0xb0, 0xd1, 0x85, 0xd0,
	0xbe, 0xd0, 0xb4, 0xd1, 0x8f, 0xd1, 0x89, 0xd0, 0xb8, 0xd1, 0x85, 0xd1, 0x81, 0xd1, 0x8f, 0x20,
	0xd0, 0xb2, 0x20, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb0, 0xd1, 0x82, 0xd1, 0x83, 0xd1, 0x81, 0xd0,
	0xb5, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x1a, 0x76, 0xd0, 0x9f, 0xd1, 0x80,
	0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0,
	0xbd, 0xd0, 0xbe, 0xd0, 0xbc, 0xd0, 0xb5, 0xd1, 0x80, 0x20, 0xd1, 0x81, 0xd1, 0x82, 0xd1, 0x80,
	0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xb8, 0xd1, 0x86, 0xd1, 0x8b, 0x20, 0xd0, 0xb8, 0x20, 0xd0, 0xba,
	0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xb8, 0xd1, 0x87, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb2,
	0xd0, 0xbe, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0,
	0xb2, 0x20, 0xd0, 0xbd, 0xd0, 0xb0, 0x20, 0xd0, 0xbe, 0xd0, 0xb4, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0,
	0xb9, 0x20, 0xd1, 0x81, 0xd1, 0x82, 0xd1, 0x80, 0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xb8, 0xd1, 0x86,
	0xd0, 0xb5, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x56, 0x31, 0x42,
	0xad, 0x02, 0x92, 0x41, 0xe3, 0x01, 0x12, 0xa9, 0x01, 0x0a, 0x17, 0xd0, 0x9c, 0xd0, 0xb5, 0xd0,
	0xbd, 0xd0, 0xb5, 0xd0, 0xb4, 0xd0, 0xb6, 0xd0, 0xb5, 0xd1, 0x80, 0x20, 0xd0, 0x9f, 0xd0, 0x92,
	0xd0, 0x97, 0x12, 0x86, 0x01, 0xd0, 0xa1, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xb2, 0xd0, 0xb8, 0xd1,
	0x81, 0x20, 0xd1, 0x80, 0xd0, 0xb5, 0xd0, 0xb0, 0xd0, 0xbb, 0xd0, 0xb8, 0xd0, 0xb7, 0xd1, 0x83,
	0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb2, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0,
	0xbe, 0xd0, 0xb4, 0xd0, 0xb5, 0xd0, 0xb9, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb2, 0xd0, 0xb8, 0xd0,
	0xb5, 0x20, 0xd0, 0xbc, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb5, 0xd0, 0xb4, 0xd0, 0xb6, 0xd0, 0xb5,
	0xd1, 0x80, 0xd0, 0xb0, 0x20, 0xd0, 0x9f, 0xd0, 0x92, 0xd0, 0x97, 0x20, 0xd1, 0x81, 0x20, 0xd0,
	0xba, 0xd1, 0x83, 0xd1, 0x80, 0xd1, 0x8c, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xbc, 0x20,
	0xd0, 0xb8, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xba, 0xd1, 0x83, 0xd0, 0xbf, 0xd0, 0xb0, 0xd1,
	0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0xd0, 0xbc, 0xd0, 0xb8, 0x32, 0x05, 0x31, 0x2e, 0x30,
	0x2e, 0x30, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30,
	0x38, 0x30, 0x2a, 0x01, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x63, 0x68, 0x70, 0x70, 0x70,
	0x70, 0x72, 0x2f, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3b,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_manager_service_v1_manager_service_proto_rawDescOnce sync.Once
	file_manager_service_v1_manager_service_proto_rawDescData = file_manager_service_v1_manager_service_proto_rawDesc
)

func file_manager_service_v1_manager_service_proto_rawDescGZIP() []byte {
	file_manager_service_v1_manager_service_proto_rawDescOnce.Do(func() {
		file_manager_service_v1_manager_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_manager_service_v1_manager_service_proto_rawDescData)
	})
	return file_manager_service_v1_manager_service_proto_rawDescData
}

var file_manager_service_v1_manager_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_manager_service_v1_manager_service_proto_goTypes = []any{
	(*OrderV1)(nil),               // 0: manager.OrderV1
	(*OrderViewV1)(nil),           // 1: manager.OrderViewV1
	(*AddOrderRequestV1)(nil),     // 2: manager.AddOrderRequestV1
	(*AddOrderResponseV1)(nil),    // 3: manager.AddOrderResponseV1
	(*RefundRequestV1)(nil),       // 4: manager.RefundRequestV1
	(*RefundResponseV1)(nil),      // 5: manager.RefundResponseV1
	(*GiveOrdersRequestV1)(nil),   // 6: manager.GiveOrdersRequestV1
	(*GiveOrdersResponseV1)(nil),  // 7: manager.GiveOrdersResponseV1
	(*ReturnRequestV1)(nil),       // 8: manager.ReturnRequestV1
	(*ReturnResponseV1)(nil),      // 9: manager.ReturnResponseV1
	(*ViewRefundsRequestV1)(nil),  // 10: manager.ViewRefundsRequestV1
	(*ViewRefundsResponseV1)(nil), // 11: manager.ViewRefundsResponseV1
	(*ViewOrdersRequestV1)(nil),   // 12: manager.ViewOrdersRequestV1
	(*ViewOrdersResponseV1)(nil),  // 13: manager.ViewOrdersResponseV1
	(*timestamppb.Timestamp)(nil), // 14: google.protobuf.Timestamp
}
var file_manager_service_v1_manager_service_proto_depIdxs = []int32{
	14, // 0: manager.OrderV1.expiration_date:type_name -> google.protobuf.Timestamp
	0,  // 1: manager.OrderViewV1.order:type_name -> manager.OrderV1
	0,  // 2: manager.AddOrderRequestV1.order:type_name -> manager.OrderV1
	1,  // 3: manager.ViewRefundsResponseV1.orders:type_name -> manager.OrderViewV1
	1,  // 4: manager.ViewOrdersResponseV1.orders:type_name -> manager.OrderViewV1
	2,  // 5: manager.ManagerService.AddOrderV1:input_type -> manager.AddOrderRequestV1
	4,  // 6: manager.ManagerService.RefundV1:input_type -> manager.RefundRequestV1
	6,  // 7: manager.ManagerService.GiveOrdersV1:input_type -> manager.GiveOrdersRequestV1
	8,  // 8: manager.ManagerService.ReturnV1:input_type -> manager.ReturnRequestV1
	12, // 9: manager.ManagerService.ViewOrdersV1:input_type -> manager.ViewOrdersRequestV1
	10, // 10: manager.ManagerService.ViewRefundsV1:input_type -> manager.ViewRefundsRequestV1
	3,  // 11: manager.ManagerService.AddOrderV1:output_type -> manager.AddOrderResponseV1
	5,  // 12: manager.ManagerService.RefundV1:output_type -> manager.RefundResponseV1
	7,  // 13: manager.ManagerService.GiveOrdersV1:output_type -> manager.GiveOrdersResponseV1
	9,  // 14: manager.ManagerService.ReturnV1:output_type -> manager.ReturnResponseV1
	13, // 15: manager.ManagerService.ViewOrdersV1:output_type -> manager.ViewOrdersResponseV1
	11, // 16: manager.ManagerService.ViewRefundsV1:output_type -> manager.ViewRefundsResponseV1
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_manager_service_v1_manager_service_proto_init() }
func file_manager_service_v1_manager_service_proto_init() {
	if File_manager_service_v1_manager_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_manager_service_v1_manager_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_manager_service_v1_manager_service_proto_goTypes,
		DependencyIndexes: file_manager_service_v1_manager_service_proto_depIdxs,
		MessageInfos:      file_manager_service_v1_manager_service_proto_msgTypes,
	}.Build()
	File_manager_service_v1_manager_service_proto = out.File
	file_manager_service_v1_manager_service_proto_rawDesc = nil
	file_manager_service_v1_manager_service_proto_goTypes = nil
	file_manager_service_v1_manager_service_proto_depIdxs = nil
}
