services:
  manager-service:
    container_name: manager-service
    image: manager-service-image:1.0.0
    build:
      context: ./../../
      dockerfile: ${PWD}/build/dev/manager_service/Dockerfile
    env_file:
      - ./../../.env
    ports:
      - 8080:8080
      - 8081:8081
    depends_on:
      - postgres
      - kafka-init-topics
    restart: always

  notifier:
    container_name: notifier
    image: notifier-image:1.0.0
    build:
      context: ./../../
      dockerfile: ${PWD}/build/dev/notifier/Dockerfile
    depends_on:
      - kafka-init-topics
    restart: always

  postgres:
    container_name: postgres_db
    image: postgres:15-alpine
    volumes:
      - ./../../pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    restart: always

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_NAME: pvz
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:29092
      DYNAMIC_CONFIG_ENABLED: "true"
    ports:
      - 8082:8080
    restart: always

  kafka0:
    container_name: kafka
    image: confluentinc/cp-kafka:7.7.1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka0:29092,CONTROLLER://kafka0:29093,PLAINTEXT_HOST://:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka0:29093"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      CLUSTER_ID: 'OWQ2MWJjYzQ4YmJjMTFlZm'
    ports:
      - 9092:9092
    restart: always

  kafka-init-topics:
    container_name: kafka-init-topics
    image: confluentinc/cp-kafka:7.7.1
    depends_on:
      - kafka0
    command: "bash -c 'echo Waiting for Kafka to be ready... && cub kafka-ready -b kafka0:29092 1 30 && kafka-topics --create --topic pvz.events-log --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka0:29092'"
